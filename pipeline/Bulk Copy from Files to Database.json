{
	"name": "Bulk Copy from Files to Database",
	"properties": {
		"activities": [
			{
				"name": "Get Files",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "newgetmetadataset",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "ForEachFile",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Files').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyFiles",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Get Metadata of files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"tableOption": "autoCreate"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "newsourcedataset",
									"type": "DatasetReference",
									"parameters": {
										"folderName": {
											"value": "@item().name",
											"type": "Expression"
										},
										"SourceConatiner": {
											"value": "@pipeline().parameters.SourceContainer",
											"type": "Expression"
										},
										"SourceDirectory": {
											"value": "@pipeline().parameters.SourceDirectory",
											"type": "Expression"
										},
										"filename": "@endsWith(item().name, '.parquet')"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlDatabaseSinkDataset",
									"type": "DatasetReference",
									"parameters": {
										"sinkTableName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Get Metadata of files",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "getfilenamesdataset",
									"type": "DatasetReference",
									"parameters": {
										"folderName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SourceContainer": {
				"type": "string"
			},
			"SourceDirectory": {
				"type": "string"
			}
		},
		"annotations": []
	}
}