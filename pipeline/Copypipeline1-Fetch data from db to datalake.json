{
	"name": "Copypipeline1-Fetch data from db to datalake",
	"properties": {
		"activities": [
			{
				"name": "Lookup data from db table",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT TABLE_SCHEMA + '.' + TABLE_NAME AS FullTableName\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_TYPE = 'BASE TABLE'\nAND TABLE_SCHEMA = 'SalesLT'\nORDER BY TABLE_SCHEMA, TABLE_NAME\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDBTableFetch",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachTable Data copy",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup data from db table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup data from db table').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data from each table",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('Select * from ',item().FullTableName)\r\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlAllTable",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "SilverContainerDataWritenFromBronze",
									"type": "DatasetReference",
									"parameters": {
										"name": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Get Metadata of bronze conatiner",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Wait for 30sec",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "metadataOfBronzeConatiner",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach table write to silver",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata of bronze conatiner",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Copy data from each table').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data bronze to silver",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@concat('SalesLT/', item().name,'/')",
											"type": "Expression"
										},
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "allBronzeCSVFilesdata",
									"type": "DatasetReference",
									"parameters": {
										"name": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SilverContainerDataWritenFromBronze",
									"type": "DatasetReference",
									"parameters": {
										"name": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Wait for 30sec",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "ForEachTable Data copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 30
				}
			},
			{
				"name": "Delete files from silver conatiner",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Validation silver data before it gets deleted",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "deleteSilverConatinerData",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "AzureDataLakeStorageConnection",
							"type": "LinkedServiceReference"
						},
						"path": "logging"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Validation silver data before it gets deleted",
				"type": "Validation",
				"dependsOn": [
					{
						"activity": "ForEach table write to silver",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "validateSilverContainerParquetFiles",
						"type": "DatasetReference"
					},
					"timeout": "0.12:00:00",
					"sleep": 10,
					"childItems": true
				}
			},
			{
				"name": "If Condition true run 2nd Pipeline",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "setDeleteSucceededTrue",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "setDeleteSucceededFalse",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('deleteSucceeded')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail Message",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Delete Opeartaion Failed",
								"errorCode": "400"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Execute Pipeline 2",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Copypipeline2-TestMyCopyFromBronzeToSilver",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						}
					]
				}
			},
			{
				"name": "setDeleteSucceededTrue",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Delete files from silver conatiner",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "deleteSucceeded",
					"value": true
				}
			},
			{
				"name": "setDeleteSucceededFalse",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Delete files from silver conatiner",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "deleteSucceeded",
					"value": false
				}
			}
		],
		"variables": {
			"deleteSucceeded": {
				"type": "Boolean"
			}
		},
		"annotations": []
	}
}