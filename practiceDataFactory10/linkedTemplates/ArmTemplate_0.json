{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "practiceDataFactory10"
		},
		"PracticeDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'PracticeDataLakeStorage'"
		},
		"PracticeAzureKeyVaultConnection_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://practiceKeyVaultt.vault.azure.net/"
		},
		"PracticeDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://practicedatalakee10.dfs.core.windows.net/"
		},
		"PracticeSqlDatabaseConnection_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "practicedb10.database.windows.net"
		},
		"PracticeSqlDatabaseConnection_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "practicedb"
		},
		"PracticeSqlDatabaseConnection_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PracticeAzureKeyVaultConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('PracticeAzureKeyVaultConnection_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PracticeDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('PracticeDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('PracticeDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Practice"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Data.csv",
						"folderPath": "output data",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empname",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "DeptID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HrData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Practice"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Hr.csv",
						"folderPath": "output data",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empname",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "DeptID",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Outputdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Practice"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output data",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deptData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Practice"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "deptdata.csv",
						"folderPath": "input data",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DeptID",
						"type": "String"
					},
					{
						"name": "DeptName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Practice"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "empdata.csv",
						"folderPath": "input data",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empname",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "DeptID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/softwareData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Practice"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Software.csv",
						"folderPath": "output data",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empname",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "DeptID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vendorData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Practice"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vendor.csv",
						"folderPath": "input data",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PO",
						"type": "String"
					},
					{
						"name": "Vender",
						"type": "String"
					},
					{
						"name": "Apple",
						"type": "String"
					},
					{
						"name": "Mango",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PracticeSqlDatabaseConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('PracticeSqlDatabaseConnection_properties_typeProperties_server')]",
					"database": "[parameters('PracticeSqlDatabaseConnection_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('PracticeSqlDatabaseConnection_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "PracticeAzureKeyVaultConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "dbpassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeAzureKeyVaultConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employesSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeSqlDatabaseConnection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Practice"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "empid",
						"type": "varchar"
					},
					{
						"name": "empname",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "varchar"
					},
					{
						"name": "DeptID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeSqlDatabaseConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow10_pivot_operation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empData",
								"type": "DatasetReference"
							},
							"name": "empData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "outputData"
						}
					],
					"transformations": [
						{
							"name": "pivotOnDeptwiseGenderEmployeeCount"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          empname as string,",
						"          Gender as string,",
						"          Country as string,",
						"          Salary as string,",
						"          DeptID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empData",
						"empData pivot(groupBy(DeptID),",
						"     pivotBy(Gender),",
						"     Total = count(empid),",
						"     columnNaming: '$N$V',",
						"     lateral: true) ~> pivotOnDeptwiseGenderEmployeeCount",
						"pivotOnDeptwiseGenderEmployeeCount sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['pivotDataGenderwiseEmpcount.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> outputData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow11_unpivot_operation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "vendorData",
								"type": "DatasetReference"
							},
							"name": "vendorData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "outputData"
						}
					],
					"transformations": [
						{
							"name": "unpivotOnVendorFruitsColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PO as string,",
						"          Vender as string,",
						"          Apple as string,",
						"          Mango as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendorData",
						"vendorData unpivot(output(",
						"          Fruits as string,",
						"          Count as string",
						"     ),",
						"     ungroupBy(PO,",
						"          Vender),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> unpivotOnVendorFruitsColumn",
						"unpivotOnVendorFruitsColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['unpivot.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> outputData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/vendorData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow12_surrogate_key')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empData",
								"type": "DatasetReference"
							},
							"name": "empData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "outputData"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          empname as string,",
						"          Gender as string,",
						"          Country as string,",
						"          Salary as string,",
						"          DeptID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empData",
						"empData keyGenerate(output(surrogate_key as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 select(mapColumn(",
						"          surrogate_key,",
						"          empid,",
						"          empname,",
						"          Gender,",
						"          Country,",
						"          Salary,",
						"          DeptID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['surrogatekey.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          surrogate_key,",
						"          empname,",
						"          Gender,",
						"          Country,",
						"          Salary,",
						"          DeptID",
						"     ),",
						"     partitionBy('hash', 1)) ~> outputData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow13_window_opeartion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empData",
								"type": "DatasetReference"
							},
							"name": "empData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "outputData"
						}
					],
					"transformations": [
						{
							"name": "windowOnDepartmenttoCalcSalary"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          empname as string,",
						"          Gender as string,",
						"          Country as string,",
						"          Salary as string,",
						"          DeptID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empData",
						"empData window(over(DeptID),",
						"     desc(Salary, true),",
						"     avgSalary = avg(toInteger(Salary)),",
						"          denseRank = denseRank()) ~> windowOnDepartmenttoCalcSalary",
						"windowOnDepartmenttoCalcSalary sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['windowOpeartion.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          empid,",
						"          empname,",
						"          Gender,",
						"          Country,",
						"          Salary,",
						"          DeptID,",
						"          avgSalary,",
						"          denseRank",
						"     ),",
						"     partitionBy('hash', 1)) ~> outputData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_Join_Operation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empData",
								"type": "DatasetReference"
							},
							"name": "empData"
						},
						{
							"dataset": {
								"referenceName": "deptData",
								"type": "DatasetReference"
							},
							"name": "deptData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "destinationData"
						}
					],
					"transformations": [
						{
							"name": "joinBothDatasets"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          empname as string,",
						"          Salary as string,",
						"          DeptID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empData",
						"source(output(",
						"          DeptID as string,",
						"          DeptName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> deptData",
						"empData, deptData join(empData@DeptID == deptData@DeptID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinBothDatasets",
						"joinBothDatasets sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          empid,",
						"          empname,",
						"          Salary,",
						"          DeptName",
						"     )) ~> destinationData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empData')]",
				"[concat(variables('factoryId'), '/datasets/deptData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2_Filter_operation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empData",
								"type": "DatasetReference"
							},
							"name": "empdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "FilteredOutputData"
						}
					],
					"transformations": [
						{
							"name": "filterEmpData"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          empname as string,",
						"          Salary as string,",
						"          DeptID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empdata",
						"empdata filter(equals(DeptID,'3')) ~> filterEmpData",
						"filterEmpData sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> FilteredOutputData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3_Aggregate_operation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empData",
								"type": "DatasetReference"
							},
							"name": "empData"
						},
						{
							"dataset": {
								"referenceName": "deptData",
								"type": "DatasetReference"
							},
							"name": "Deptdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "OutputData"
						}
					],
					"transformations": [
						{
							"name": "aggregateDepartments"
						},
						{
							"name": "joinToGetDeptName"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          empname as string,",
						"          Salary as string,",
						"          DeptID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empData",
						"source(output(",
						"          DeptID as string,",
						"          DeptName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Deptdata",
						"empData aggregate(groupBy(DeptID),",
						"     TotalCounnt = count(DeptID)) ~> aggregateDepartments",
						"aggregateDepartments, Deptdata join(aggregateDepartments@DeptID == Deptdata@DeptID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinToGetDeptName",
						"joinToGetDeptName sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          DeptName,",
						"          TotalCount = TotalCounnt",
						"     )) ~> OutputData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empData')]",
				"[concat(variables('factoryId'), '/datasets/deptData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow4_Conditional_Split')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empData",
								"type": "DatasetReference"
							},
							"name": "empData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "outputdata"
						},
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "softwareOutputData"
						},
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "DataEmployeeData"
						}
					],
					"transformations": [
						{
							"name": "splitFromDeparments"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          empname as string,",
						"          Salary as string,",
						"          DeptID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empData",
						"empData split(equals(DeptID, '1'),",
						"     equals(DeptID, '2'),",
						"     equals(DeptID, '3'),",
						"     disjoint: false) ~> splitFromDeparments@(HrEmployee, SoftwareEmployee, DataEmployee)",
						"splitFromDeparments@HrEmployee sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Hr.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> outputdata",
						"splitFromDeparments@SoftwareEmployee sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Software.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          empid,",
						"          empname,",
						"          Salary,",
						"          DeptID",
						"     ),",
						"     partitionBy('hash', 1)) ~> softwareOutputData",
						"splitFromDeparments@DataEmployee sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Data.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          empid,",
						"          empname,",
						"          Salary,",
						"          DeptID",
						"     ),",
						"     partitionBy('hash', 1)) ~> DataEmployeeData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow5_Derived_column_operation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Practice"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empData",
								"type": "DatasetReference"
							},
							"name": "EmpData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Outputdata",
								"type": "DatasetReference"
							},
							"name": "outputData"
						}
					],
					"transformations": [
						{
							"name": "derivedColumnFromEmpData"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as short,",
						"          empname as string,",
						"          Country as string,",
						"          Salary as integer,",
						"          DeptID as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EmpData",
						"EmpData derive(Country = upper(Country),",
						"          NewCountry = iif(isNull(Country), 'Unknown', upper(Country))) ~> derivedColumnFromEmpData",
						"derivedColumnFromEmpData sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['DerivedCountryData.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> outputData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empData')]",
				"[concat(variables('factoryId'), '/datasets/Outputdata')]"
			]
		}
	]
}