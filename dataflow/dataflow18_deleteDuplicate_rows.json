{
	"name": "dataflow18_deleteDuplicate_rows",
	"properties": {
		"folder": {
			"name": "Real Time scenarios"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empData",
						"type": "DatasetReference"
					},
					"name": "oldEMpData"
				},
				{
					"dataset": {
						"referenceName": "newEmpData",
						"type": "DatasetReference"
					},
					"name": "NewEmpData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Outputdata",
						"type": "DatasetReference"
					},
					"name": "outputData"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "aggregateToProcessIncrementalRows"
				},
				{
					"name": "sortInAsendingOrder"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          Gender as string,",
				"          Country as string,",
				"          Salary as string,",
				"          DeptID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> oldEMpData",
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          Gender as string,",
				"          Country as string,",
				"          Salary as string,",
				"          DeptID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NewEmpData",
				"oldEMpData, NewEmpData union(byName: true)~> union1",
				"union1 aggregate(groupBy(empid),",
				"     each(match(name != 'empid'), $$ = first($$))) ~> aggregateToProcessIncrementalRows",
				"derivedColumn1 sort(asc(empid, true)) ~> sortInAsendingOrder",
				"aggregateToProcessIncrementalRows derive(empid = toInteger(empid)) ~> derivedColumn1",
				"sortInAsendingOrder sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['incrementalEmpData.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> outputData"
			]
		}
	}
}