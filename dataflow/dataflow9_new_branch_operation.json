{
	"name": "dataflow9_new_branch_operation",
	"properties": {
		"folder": {
			"name": "Practice"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empData",
						"type": "DatasetReference"
					},
					"name": "empData"
				},
				{
					"dataset": {
						"referenceName": "deptData",
						"type": "DatasetReference"
					},
					"name": "DeptData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Outputdata",
						"type": "DatasetReference"
					},
					"name": "outputData"
				},
				{
					"dataset": {
						"referenceName": "Outputdata",
						"type": "DatasetReference"
					},
					"name": "outputDataNewbranch"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "aggregateOndeptForEmpCount"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          Salary as string,",
				"          DeptID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empData",
				"source(output(",
				"          DeptID as string,",
				"          DeptName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DeptData",
				"empData, DeptData join(empData@DeptID == DeptData@DeptID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"empData aggregate(groupBy(DeptID),",
				"     totalEmpCount = count(empid)) ~> aggregateOndeptForEmpCount",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['newBranchJoinedData.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> outputData",
				"aggregateOndeptForEmpCount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['newBranchAggregateData.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> outputDataNewbranch"
			]
		}
	}
}