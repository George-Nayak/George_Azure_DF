{
	"name": "dataflow4_Conditional_Split",
	"properties": {
		"folder": {
			"name": "Practice"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empData",
						"type": "DatasetReference"
					},
					"name": "empData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Outputdata",
						"type": "DatasetReference"
					},
					"name": "outputdata"
				},
				{
					"dataset": {
						"referenceName": "Outputdata",
						"type": "DatasetReference"
					},
					"name": "softwareOutputData"
				},
				{
					"dataset": {
						"referenceName": "Outputdata",
						"type": "DatasetReference"
					},
					"name": "DataEmployeeData"
				}
			],
			"transformations": [
				{
					"name": "splitFromDeparments"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          Salary as string,",
				"          DeptID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empData",
				"empData split(equals(DeptID, '1'),",
				"     equals(DeptID, '2'),",
				"     equals(DeptID, '3'),",
				"     disjoint: false) ~> splitFromDeparments@(HrEmployee, SoftwareEmployee, DataEmployee, Default)",
				"splitFromDeparments@HrEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> outputdata",
				"splitFromDeparments@SoftwareEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          empname,",
				"          Salary,",
				"          DeptID",
				"     )) ~> softwareOutputData",
				"splitFromDeparments@DataEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          empname,",
				"          Salary,",
				"          DeptID",
				"     )) ~> DataEmployeeData"
			]
		}
	}
}